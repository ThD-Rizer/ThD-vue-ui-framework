@import './mixins/elevation.scss';
@import './mixins/grid.scss';
@import './mixins/position.scss';
@import './mixins/reset.scss';

@mixin clearFix {
  &::after {
    display: block;
    content: '';
    clear: both;
  }
}

@mixin flexMinHeightFix($value: 'inherit') {
  &::after {
    content: '';
    display: block;
    min-height: $value;
    font-size: 0;
  }
}

@mixin hideText {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

@mixin overkill {
  &:not(:focus):not(:active) {
    width: 1px;
    height: 1px;
    border: 0;
    padding: 0;
    margin: -1px;
    position: absolute;
    white-space: nowrap;
    clip-path: inset(100%);
    clip: rect(0 0 0 0);
    overflow: hidden;
  }
}

@mixin visuallyHidden {
  height: 1px !important;
  width: 1px !important;
  border: 0 !important;
  padding: 0 !important;
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden !important;
  visibility: hidden !important;
}

@mixin hover {
  // Media query `hover` исключает применение стилей на тач устройствах
  // Это сделано для исключения "залипших" стилей при клике, сброс которых возможен только
  // при клике вне элемента, что может негативно повлиять на UX
  @media (hover: hover) {
    &:not([disabled]):hover {
      @content;
    }
  }
}

@mixin active {
  &:not([disabled]):active {
    @content;
  }
}

@mixin focus {
  &:not([disabled]):focus {
    @content;
  }
}

@mixin focusedOutline($color: $colorMineShaft, $size: 3px) {
  box-shadow: 0 0 0 $size rgba($color, .2);
}

@mixin fontFace($name, $typeface, $weight: 400, $style: normal, $fontsPath) {
  @font-face {
    $path: '#{$fontsPath}#{$name}/#{$name}-#{$typeface}';
    $localName: if($typeface == 'Regular', $name, '#{$name} #{$typeface}');

    font-family: $name;
    src: url('#{$path}.eot');
    src: local($localName), local('#{$name}-#{$typeface}'),
    url('#{$path}.eot?#iefix') format('embedded-opentype'),
    url('#{$path}.woff') format('woff'),
    url('#{$path}.woff2') format('woff2');
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin wordBreak {
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  word-break: break-all;
}

@mixin fontGradient($from, $to, $direction) {
  background: -webkit-linear-gradient($direction, $from, $to);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

@mixin backgroundLinearGradient($from, $to, $fallback: mix($from, $to), $angel: 90deg) {
  background: $fallback;
  background: linear-gradient($angel, $from 0%, $to 100%);
}

@mixin borderX($left, $right: $left) {
  border-left: $left;
  border-right: $right;
}

@mixin borderY($top, $bottom: $top) {
  border-top: $top;
  border-bottom: $bottom;
}

@mixin paddingX($left, $right: $left) {
  padding-left: $left;
  padding-right: $right;
}

@mixin paddingY($top, $bottom: $top) {
  padding-top: $top;
  padding-bottom: $bottom;
}

@mixin marginX($left, $right: $left) {
  margin-left: $left;
  margin-right: $right;
}

@mixin marginY($top, $bottom: $top) {
  margin-top: $top;
  margin-bottom: $bottom;
}

